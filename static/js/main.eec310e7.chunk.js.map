{"version":3,"sources":["Profile/index.jsx","Statistic/index.jsx","FriendList/index.jsx","Table/index.jsx","App.js","index.js"],"names":["Profile","this","props","avatar","name","tag","location","stats","class","src","alt","followers","views","likes","Component","Stats","r","Math","floor","random","data","map","item","style","backgroundColor","getRandomColor","label","percentage","FriendList","isOnline","setColor","width","TableList","type","amount","currency","App","user","statisticalData","friends","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"05GA4CeA,E,4JA9Bb,WAAU,IAAD,EACsCC,KAAKC,MAA3CC,EADA,EACAA,OAAQC,EADR,EACQA,KAAMC,EADd,EACcA,IAAKC,EADnB,EACmBA,SAAUC,EAD7B,EAC6BA,MACpC,OACE,sBAAKC,MAAM,UAAX,UACE,sBAAKA,MAAM,cAAX,UACE,qBAAKC,IAAKN,EAAQO,IAAI,gHAAsBF,MAAM,WAClD,mBAAGA,MAAM,OAAT,SAAiBJ,IACjB,oBAAGI,MAAM,MAAT,cAAiBH,KACjB,mBAAGG,MAAM,WAAT,SAAqBF,OAGvB,qBAAIE,MAAM,QAAV,UACE,qBAAIA,MAAM,aAAV,UACE,sBAAMA,MAAM,QAAZ,uBACA,uBAAMA,MAAM,WAAZ,cAAyBD,EAAMI,gBAEjC,qBAAIH,MAAM,aAAV,UACE,sBAAMA,MAAM,QAAZ,mBACA,uBAAMA,MAAM,WAAZ,cAAyBD,EAAMK,YAEjC,qBAAIJ,MAAM,aAAV,UACE,sBAAMA,MAAM,QAAZ,mBACA,uBAAMA,MAAM,WAAZ,cAAyBD,EAAMM,sB,GAhCrBC,a,OC8BPC,G,0KAzBb,WACE,IAAIC,EAAI,WACN,OAAOC,KAAKC,MAAsB,IAAhBD,KAAKE,WAEzB,MAAO,OAASH,IAAM,IAAMA,IAAM,IAAMA,IAAM,M,oBAGhD,WAAU,IAAD,OACAI,EAAQnB,KAAKC,MAAbkB,KACP,OACE,0BAASZ,MAAM,aAAf,UACE,oBAAIA,MAAM,QAAV,0BACA,oBAAIA,MAAM,YAAV,SACGY,EAAKC,KAAI,SAACC,GAAD,OACR,qBAAId,MAAM,OAAOe,MAAO,CAAEC,gBAAiB,EAAKC,kBAAhD,UACE,sBAAMjB,MAAM,aAAZ,SAA0Bc,EAAKI,QAC/B,uBAAMlB,MAAM,aAAZ,cAA2Bc,EAAKK,WAAhC,sB,GArBMb,c,OCgCLc,G,oKA3Bb,SAASC,GACP,OAAc,IAAXA,EACM,MAEA,U,oBAIX,WAAU,IAAD,OACAT,EAAQnB,KAAKC,MAAbkB,KACP,OACE,oBAAIZ,MAAM,cAAV,SACKY,EAAKC,KAAI,SAAAC,GAAI,OACd,qBAAId,MAAM,cAAV,UACA,sBAAMA,MAAM,SACZe,MAAO,CAAEC,gBAAiB,EAAKM,SAASR,EAAKO,WAD7C,SAC2DP,EAAKO,WAChE,qBAAKrB,MAAM,gBAAgBC,IAAKa,EAAKnB,OAAQO,IAAI,GAAGqB,MAAM,OAC1D,mBAAGvB,MAAM,cAAT,SAAwBc,EAAKlB,mB,GAtBdU,c,QCgCVkB,G,kKA1Bb,WAAU,IACDZ,EAAQnB,KAAKC,MAAbkB,KACP,OACE,wBAAOZ,MAAM,sBAAb,UACE,gCACE,+BACE,sCACA,wCACA,+CAIJ,gCACGY,EAAKC,KAAI,SAACC,GAAD,OACR,+BACE,6BAAKA,EAAKW,OACV,6BAAKX,EAAKY,SACV,6BAAKZ,EAAKa,0B,GAvBArB,c,QCmBTsB,MAXf,WACE,OACE,gCACI,cAAC,EAAD,CAASjC,OAAQkC,EAAKlC,OAAQC,KAAMiC,EAAKjC,KAAME,SAAU+B,EAAK/B,SAAUD,IAAKgC,EAAKhC,IAAKE,MAAO8B,EAAK9B,QACnG,cAAC,EAAD,CAAOa,KAAMkB,IACb,cAAC,EAAD,CAAYlB,KAAMmB,IAClB,cAAC,EAAD,CAAWnB,KAAMoB,QCZzBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.eec310e7.chunk.js","sourcesContent":["import { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport \"./Profile.css\";\r\n\r\nclass Profile extends Component {\r\n  static propTypes = {\r\n    avatar: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    tag: PropTypes.string.isRequired,\r\n    location: PropTypes.string.isRequired,\r\n    stats: PropTypes.objectOf(PropTypes.number)\r\n  };\r\n\r\n\r\n  render() {\r\n    const {avatar, name, tag, location, stats} = this.props;\r\n    return (\r\n      <div class=\"profile\">\r\n        <div class=\"description\">\r\n          <img src={avatar} alt=\"Аватар пользователя\" class=\"avatar\" />\r\n          <p class=\"name\">{name}</p>\r\n          <p class=\"tag\">@{tag}</p>\r\n          <p class=\"location\">{location}</p>\r\n        </div>\r\n\r\n        <ul class=\"stats\">\r\n          <li class=\"stats-item\">\r\n            <span class=\"label\">Followers</span>\r\n            <span class=\"quantity\"> {stats.followers}</span>\r\n          </li>\r\n          <li class=\"stats-item\">\r\n            <span class=\"label\">Views</span>\r\n            <span class=\"quantity\"> {stats.views}</span>\r\n          </li>\r\n          <li class=\"stats-item\">\r\n            <span class=\"label\">Likes</span>\r\n            <span class=\"quantity\"> {stats.likes}</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Stats.css\";\r\n\r\nclass Stats extends Component {\r\n  static propTypes = {\r\n    data: PropTypes.arrayOf(PropTypes.object).isRequired\r\n  };\r\n\r\n  getRandomColor() {\r\n    let r = function () {\r\n      return Math.floor(Math.random() * 256);\r\n    };\r\n    return \"rgb(\" + r() + \",\" + r() + \",\" + r() + \")\";\r\n  }\r\n\r\n  render() {\r\n    const {data} = this.props;\r\n    return (\r\n      <section class=\"statistics\">\r\n        <h2 class=\"title\">Upload stats</h2>\r\n        <ul class=\"stat-list\">\r\n          {data.map((item) => (\r\n            <li class=\"item\" style={{ backgroundColor: this.getRandomColor() }}>\r\n              <span class=\"label-stat\">{item.label}</span>\r\n              <span class=\"percentage\"> {item.percentage}%</span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Stats;\r\n","import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport './FriendList.css';\r\n\r\nclass FriendList extends Component {\r\n  static propTypes = {\r\n    data: PropTypes.arrayOf(PropTypes.object).isRequired\r\n  };\r\n\r\n  setColor(isOnline) {\r\n    if(isOnline===false){\r\n      return \"red\"\r\n    }else{\r\n      return \"green\"\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {data} = this.props;\r\n    return (\r\n      <ul class=\"friend-list\">\r\n      {    data.map(item =>(\r\n          <li class=\"item-friend\">\r\n          <span class=\"status\"\r\n          style={{ backgroundColor: this.setColor(item.isOnline) }}>{item.isOnline}</span>\r\n          <img class=\"avatar-friend\" src={item.avatar} alt=\"\" width=\"48\" />\r\n          <p class=\"name-friend\">{item.name}</p>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n     );\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default FriendList;","import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Table.css\";\r\n\r\nclass TableList extends Component {\r\n  static propTypes = {\r\n    data: PropTypes.arrayOf(PropTypes.object).isRequired\r\n  };\r\n\r\n\r\n  render() {\r\n    const {data} = this.props;\r\n    return (\r\n      <table class=\"transaction-history\">\r\n        <thead>\r\n          <tr>\r\n            <th>Type</th>\r\n            <th>Amount</th>\r\n            <th>Currency</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {data.map((item) => (\r\n            <tr>\r\n              <td>{item.type}</td>\r\n              <td>{item.amount}</td>\r\n              <td>{item.currency}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableList;\r\n","import Profile from './Profile';\nimport user from './Profile/user.json';\n\nimport Stats from './Statistic';\nimport statisticalData from './Statistic/statistical-data.json';\n\nimport FriendList from './FriendList';\nimport friends from './FriendList/friends.json';\n\nimport TableList from './Table';\nimport transactions from './Table/transactions.json';\n\nfunction App() {\n  return (\n    <div>\n        <Profile avatar={user.avatar} name={user.name} location={user.location} tag={user.tag} stats={user.stats}/>\n        <Stats data={statisticalData}/>\n        <FriendList data={friends}/>\n        <TableList data={transactions}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}